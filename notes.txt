tags3.pl
  Defintions
    o          obj's dspt index
    k          obj's data hash index
    a          obj's data array index
    dspt
    part       member of an array
    value      a value belonging to a key-value pair in a hash
    point      o.o.o
    pointer    x.x.x.x.x.x k.a.k.a.k.a
    lvl        scalar x.x.x.x.x.x
    pli        x.x.x.x.[x], pointer level index
    reff
    lvlReff    ref at lvl
    Pre
    Want
    Objects @*(unique/- member check); @*(author(alias)-title-url(url_attributes) link); @$*(obj count  check);
      containers @(depth priority)
      - section
      - series
      tags $(intra redundancy check)
      - tags @*(title-tagline link)
      - description
      identifiers
      - libName @$(inter/intra duplicate check)
      - author  @$(inter/intra duplicate check)
      - title   @(inter duplicate check)
    Attributes @(attribute line up)
      tag-like $(intra redundancy check)
      - author_attribute $(alias query)
      - title_attribute
      - anthro  $(anthro query)
      - general $(general query)
      - ops     $(ops query)
      ordering $(order check)
      - url_attribute $(story section/type query)
    Other
      - preserve
      - LN
      - raw
      - miss

  Assumptions
    General
    - no backslashes in dspt key names
    - all dspt key names are unique
    - all hashes are parts of arrays
    - all arrays are values in hashes
    - all scalars are values or parts of hashes or arrays respectively
    - all hashes represent an object
    Combine
    - Every lvl except -1 and every part and value of that lvl goes into the want subroutine.
  Starting Paradigm
    Error Checking
      - Accountability = ( #lines captured / #lines ), can set
        threshold to min accountability, either global, total,
        or local to obj
  Steps
    1) capture_hash via dspt; linear & dynamic
    2) predicable iteration through dspt; iterating along point address
       (ex. 1.1.2.12), descending levels from left to right. point addresses
       differing in number of decimals are parent/child, while those with the
       same number of decimals are siblings
    3) evolved from 3, now we go from one ref to array of reffs.

  Model
    %obj {
    |      $obj: $item,
    |    @attrs: <$_, [@_], ...>,
    |    @child: <[@obj]>
    |     @meta: <$LN, $raw, ...>,
    }
    $lvl
    $index
    $reff     $reff->[$lvl]
    $pointer  $pointer->[$lvl]
    $lvlreff  $lvlreff->[$index]

    combine
      SUB |Data type|args|lvl_Reff|obj                                |lvl|index|pli                  |lvlReff|post
      PRE  @_        @_                                                ++  -1    pli                   %
      WANT @$        $_            $_                                  lvl index index/2               %       $reff->[$lvl+1] = $lvlReff->{$item};
      PRE  %         @_            getLvlObj($db,$lvlReff_0->[$pli])   lvl -1    (E_pli&&lvl!=-1)?++:0 @
      WANT %$        $_                                                lvl index index                 @       $reff->[$lvl+1] = $lvlReff->[$index];
    Duplicates
    Contrast
      libName hmofa_lib
      N.{n}...X.{x}
      LIBS{masterbin}.SECTIONS{masterbin}.AUTHORS{alfabarf}.SERIES{Hair of the dog}.STORIES{Hair of the dog}.URLS{http.url.com}
      LIBS{masterbin}.SECTIONS{masterbin}.AUTHORS{alfabarf}.STORIES{Hair of the dog}.URLS{http.url.com}
      LIBS{masterbin}.AUTHORS{alfabarf}.SERIES{Hair of the dog}.STORIES{Hair of the dog}.URLS{http.url.com}
      LIBS{masterbin}.AUTHORS{alfabarf}.STORIES{Hair of the dog}.URLS{http.url.com}
      schema
      - depth priority

      LIBS{masterbin}.SECTIONS{masterbin}.AUTHORS{alfabarf}.SERIES{Hair of the dog}.STORIES{Hair of the dog}.URLS{http.url.com}.url_attribute{ch.1}
  Misc
    '[]' should show up as tags
    the substitution problem
Git
  git config --get remote.origin.url
  git remote show origin
  git log -p
Misc
  if ( $URL =~ qr{\Q$ioURL\E|\Q$rawURL\E} )
  Jq
    cat ./json/hmofa2.json | jq 'walk(if type == "object" then with_entries(select(.key | test("LN") | not)) else . end)' | less
  Shorten URL via git.io
    curl -s -i https://git.io -F "URL"   \\
      | grep Location                    \\
      | sed -n 's/Location: \(.*\)/\1/p' \\
      | tr -d '\n'                       \\
      | tee /dev/tty                     \\
      | tr -d '\r\n'                     \\
      | pbcopy
    - even if you delete the file the shorten url still points to the same place in the repo
      so if you put the file back the link will lead to it.
    Example:
      ~$curl -s -i https://git.io -F "url=https://raw.githubusercontent.com/Azuhmier/hmofa/master/archive_7/NKkhT1pd" | grep Location | sed -n 's/Location: \(.*\)/\1/p'
      https://git.io/J3Xym
  Removing newlines
    cat -v
    tr -d '\n'
    perl -pe 'chomp if EOF'
    perl -pe 'chomp'
  Teeing and Piping to stdout
    tee /dev/tty
    tee >&1
  PYTHON
    https://stackoverflow.com/questions/2812520/dealing-with-multiple-python-versions-and-pip
    https://stackoverflow.com/questions/65866417/pip-install-failing-on-python2/65866547#65866547
    The correct get-pip.py file for python2 has been moved to https://bootstrap.pypa.io/pip/2.7/get-pip.py
    curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py
    sudo python2 get-pip.py
    /usr/local/opt/python@3.9/bin/python3.9 -m pip install --upgrade pip

  PERL
    my var = f() // die;
    my var = f() || die;
    defined (my var = f()) or die;
    !!$var     # force boolean context
    0 + $var   # force numeric context
    '' . $var  # force string context
  PERL DEBUGGER
    perl
    perl -de1 (interactive perl console)
